/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* list3=new ListNode(0);
        ListNode* trav = list3;
        while(list1 != NULL && list2 != NULL)
        {
            if(list1->val<list2->val)
            {
                ListNode* temp = new ListNode(list1->val);
                trav->next=temp;
                trav=temp;
                list1=list1->next;
            }
            else if(list1->val>=list2->val)
            {
                ListNode* temp = new ListNode(list2->val);
                trav->next=temp;
                trav=temp;
                list2=list2->next;
            }
        }
        if(list1!=NULL)
        {
            trav->next=list1;
        }
        if(list2!=NULL)
        {
            trav->next=list2;
        }
        list3=list3->next;
        return list3;
    }
};
