/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int>ans;
        if(root==NULL)
        {
            return ans;
        }
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        // ans.push_back(root->val);
        while(!q.empty())
        {
            TreeNode* frontnode=q.front();
            q.pop();
            if(frontnode==NULL && (!q.empty()))
            {
                q.push(NULL);
            }
            else if(frontnode!=NULL)
            {
                if(frontnode->left)
                {
                    q.push(frontnode->left);
                }
                if(frontnode->right)
                {
                    q.push(frontnode->right);
                }

            }
            if(q.front()==NULL)
            {
                ans.push_back(frontnode->val);
            }
        }
        return ans;
    }
};
